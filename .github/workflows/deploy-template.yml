name: Deploy Template

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      fly_config:
        required: true
        type: string
    secrets:
      FLY_API_TOKEN:
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    environment:
      name: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Flutter version
        id: flutter-version
        run: |
          FLUTTER_VERSION=$(cat .flutter-version)
          echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_ENV
          echo "Flutter version: $FLUTTER_VERSION"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Build Flutter app
        run: bin/build-fly ${{ inputs.environment }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@1.5
        with:
          version: 0.3.195

      - name: Deploy to Fly.io
        run: flyctl deploy --config ${{ inputs.fly_config }} --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
